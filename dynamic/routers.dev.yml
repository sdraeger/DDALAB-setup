http:
  routers:
    # HTTP Routes
    web:
      rule: "Host(`localhost`)"
      entryPoints:
        - web
      service: web
    # Removed: web-auth routing to avoid conflicts with Python API auth endpoints
    web-api:
      rule: "Host(`localhost`) && Path(`/api`)"
      entryPoints:
        - web
      service: web
    web-debug:
      rule: "Host(`localhost`) && PathPrefix(`/api/debug`)"
      priority: 80
      entryPoints:
        - web
      service: web
    web-modern-widget-layouts:
      rule: "Host(`localhost`) && PathPrefix(`/api/modern-widget-layouts`)"
      priority: 100
      entryPoints:
        - web
      service: web
    api:
      rule: "Host(`localhost`) && PathPrefix(`/api/`)"
      priority: 50
      entryPoints:
        - web
      service: api
    api-tickets:
      rule: "Host(`localhost`) && PathPrefix(`/api/tickets`)"
      priority: 70
      entryPoints:
        - web
      service: api
    api-graphql:
      rule: "Host(`localhost`) && PathPrefix(`/graphql`)"
      priority: 60
      entryPoints:
        - web
      service: api
    traefik:
      rule: "Host(`localhost`) && PathPrefix(`/dashboard`)"
      entryPoints:
        - web
      service: web

    # HTTPS Routes
    web-secure:
      rule: "Host(`localhost`)"
      entryPoints:
        - websecure
      service: web
      tls:
        options: default
    # Removed: web-auth-secure routing to avoid conflicts with Python API auth endpoints
    web-api-secure:
      rule: "Host(`localhost`) && Path(`/api`)"
      entryPoints:
        - websecure
      service: web
      tls:
        options: default
    web-debug-secure:
      rule: "Host(`localhost`) && PathPrefix(`/api/debug`)"
      priority: 80
      entryPoints:
        - websecure
      service: web
      tls:
        options: default
    web-modern-widget-layouts-secure:
      rule: "Host(`localhost`) && PathPrefix(`/api/modern-widget-layouts`)"
      priority: 100
      entryPoints:
        - websecure
      service: web
      tls:
        options: default
    api-secure:
      rule: "Host(`localhost`) && PathPrefix(`/api/`)"
      priority: 50
      entryPoints:
        - websecure
      service: api
      tls:
        options: default
    api-tickets-secure:
      rule: "Host(`localhost`) && PathPrefix(`/api/tickets`)"
      priority: 70
      entryPoints:
        - websecure
      service: api
      tls:
        options: default
    api-graphql-secure:
      rule: "Host(`localhost`) && PathPrefix(`/graphql`)"
      priority: 60
      entryPoints:
        - websecure
      service: api
      tls:
        options: default
    traefik-secure:
      rule: "Host(`localhost`) && PathPrefix(`/dashboard`)"
      entryPoints:
        - websecure
      service: web
      tls:
        options: default

    web-auth:
      rule: "Host(`localhost`) && PathPrefix(`/api/auth`)"
      priority: 100
      entryPoints:
        - web
      service: web

    web-auth-secure:
      rule: "Host(`localhost`) && PathPrefix(`/api/auth`)"
      priority: 100
      entryPoints:
        - websecure
      service: web
      tls:
        options: default

  services:
    web:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:3000" # Web service (e.g., Next.js)
    api:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:8001" # API service (uvicorn)

  middlewares:
    auth:
      basicAuth:
        users: "admin:$apr1$example$hashedpassword" # Replace with dev password hash
